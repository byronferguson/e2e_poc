name: Deploy Image
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
      imageTag:
        description: 'Image Tag'
        required: true

jobs:
  deploy:
    name: Deploying ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Production Environment
        if: "github.event.inputs.environment == 'production'"
        run: |
          echo "API_DOMAIN=${{ secrets.PRODUCTION_API_DOMAIN }}" >> $GITHUB_ENV
          echo "GKE_CLUSTER_NAME=${{ secrets.PRODUCTION_GKE_CLUSTER_NAME }}" >> $GITHUB_ENV
          echo "GKE_COMPUTE_ZONE=${{ secrets.PRODUCTION_GKE_COMPUTE_ZONE }}" >> $GITHUB_ENV
          echo "GCP_PROJECT_ID=${{ secrets.PRODUCTION_GCP_PROJECT_ID }}" >> $GITHUB_ENV
          echo "TLS_SECRET_NAME=${{ secrets.PRODUCTION_TLS_SECRET_NAME }}" >> $GITHUB_ENV
          echo "REPLICAS=${{ secrets.PRODUCTION_REPLICAS }}" >> $GITHUB_ENV
      - name: Demo Environment
        if: "github.event.inputs.environment == 'demo'"
        run: |
          echo "API_DOMAIN=${{ secrets.DEMO_API_DOMAIN }}" >> $GITHUB_ENV
          echo "GKE_CLUSTER_NAME=${{ secrets.DEMO_GKE_CLUSTER_NAME }}" >> $GITHUB_ENV
          echo "GKE_COMPUTE_ZONE=${{ secrets.DEMO_GKE_COMPUTE_ZONE }}" >> $GITHUB_ENV
          echo "GCP_PROJECT_ID=${{ secrets.DEMO_GCP_PROJECT_ID }}" >> $GITHUB_ENV
          echo "TLS_SECRET_NAME=${{ secrets.DEMO_TLS_SECRET_NAME }}" >> $GITHUB_ENV
          echo "REPLICAS=${{ secrets.DEMO_REPLICAS }}" >> $GITHUB_ENV
      - name: Staging Environment
        if: "github.event.inputs.environment == 'staging'"
        run: |
          echo "API_DOMAIN=${{ secrets.STAGING_API_DOMAIN }}" >> $GITHUB_ENV
          echo "GKE_CLUSTER_NAME=${{ secrets.STAGING_GKE_CLUSTER_NAME }}" >> $GITHUB_ENV
          echo "GKE_COMPUTE_ZONE=${{ secrets.STAGING_GKE_COMPUTE_ZONE }}" >> $GITHUB_ENV
          echo "GCP_PROJECT_ID=${{ secrets.STAGING_GCP_PROJECT_ID }}" >> $GITHUB_ENV
          echo "TLS_SECRET_NAME=${{ secrets.STAGING_TLS_SECRET_NAME }}" >> $GITHUB_ENV
          echo "REPLICAS=${{ secrets.STAGING_REPLICAS }}" >> $GITHUB_ENV
      - name: Develop Environment
        if: "github.event.inputs.environment == 'develop'"
        run: |
          echo "API_DOMAIN=${{ secrets.DEVELOP_API_DOMAIN }}" >> $GITHUB_ENV
          echo "GKE_CLUSTER_NAME=${{ secrets.DEVELOP_GKE_CLUSTER_NAME }}" >> $GITHUB_ENV
          echo "GKE_COMPUTE_ZONE=${{ secrets.DEVELOP_GKE_COMPUTE_ZONE }}" >> $GITHUB_ENV
          echo "GCP_PROJECT_ID=${{ secrets.DEVELOP_GCP_PROJECT_ID }}" >> $GITHUB_ENV
          echo "TLS_SECRET_NAME=${{ secrets.DEVELOP_TLS_SECRET_NAME }}" >> $GITHUB_ENV
          echo "REPLICAS=${{ secrets.DEVELOP_REPLICAS }}" >> $GITHUB_ENV
      - name: Start Deployment
        uses: bobheadxi/deployments@v0.4.3
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ github.event.inputs.environment }}
      - name: Authenticate GoogleCloud
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.PRODUCTION_GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.PRODUCTION_GCP_SA_KEY }}
          export_default_credentials: true    
      - name: Deploying ${{ github.event.repository.name }} (${{ github.event.inputs.imageTag }}) to ${{ github.event.inputs.environment }}
        uses: bigblueswimschool/actions/helm@production
        with:
          namespace: ${{ secrets.GKE_NAMESPACE }}
          chart: ${{ secrets.HELM_CHART }}
          jsonValues: >
            {
              "name": "${{ github.event.repository.name }}",
              "domain": "${{ env.API_DOMAIN }}",
              "repository": "gcr.io/${{ secrets.PRODUCTION_GCP_PROJECT_ID }}",
              "cluster_issuer": "${{ secrets.CLUSTER_ISSUER }}",
              "tls_secret_name": "${{ env.TLS_SECRET_NAME }}",
              "version": "${{ github.event.inputs.imageTag }}",
              "path": "${{ secrets.API_BASE_PATH }}",
              "readinessPath": "${{ secrets.API_BASE_PATH }}${{ secrets.POD_READINESS_PATH }}",
              "replicas": ${{ env.REPLICAS }},
              "apm": ${{ secrets.POD_APM }},
              "cors": ${{ secrets.POD_CORS }},
              "websocket": ${{ secrets.POD_WEBSOCKET }},
              "secrets": ${{ secrets.CLUSTER_SECRETS }},
              "resources": {
                "requests": ${{ secrets.POD_RESOURCES }}
              },
              "environment": ${{ secrets.POD_ENVIRONMENT }}
            }
        env:
          CLUSTER_NAME: ${{ env.GKE_CLUSTER_NAME }}
          COMPUTE_ZONE: ${{ env.GKE_COMPUTE_ZONE }}
          PROJECT_ID: ${{ env.GCP_PROJECT_ID }}
      - name: Update Deployment Status
        uses: bobheadxi/deployments@v0.4.3
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: https://${{ env.API_DOMAIN }}${{ secrets.API_BASE_PATH }}${{ secrets.POD_READINESS_PATH }}
